@import './variables.scss';

// Typography Mixins
@mixin heading-style($size: $font-size-3xl, $weight: $font-weight-normal) {
  font-family: $font-heading;
  font-size: $size;
  font-weight: $weight;
  line-height: 1.2;
  color: $text-primary;
}

@mixin body-text($size: $font-size-base, $weight: $font-weight-normal) {
  font-family: $font-body;
  font-size: $size;
  font-weight: $weight;
  line-height: 1.6;
  color: $text-primary;
}

@mixin text-variant($variant: 'primary') {
  @if $variant == 'primary' {
    color: $text-primary;
  } @else if $variant == 'secondary' {
    color: $text-secondary;
  } @else if $variant == 'tertiary' {
    color: $text-tertiary;
  } @else if $variant == 'disabled' {
    color: $text-disabled;
  }
}

// Button Mixins
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  outline: none;
  
  &:focus {
    outline: 2px solid $primary-color;
    outline-offset: 2px;
  }
}

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-lg;
  border: none;
  border-radius: $border-radius-full;
  font-family: $font-body;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-normal;
  outline: none;
  
  &:focus {
    outline: 2px solid $primary-color;
    outline-offset: 2px;
  }
}

@mixin button-variant($variant: 'primary') {
  @if $variant == 'primary' {
    background-color: $primary-color;
    color: $white;
    
    &:hover:not(:disabled) {
      background-color: $primary-hover;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(252, 68, 135, 0.3);
    }
    
    &:disabled {
      background-color: $primary-disabled;
      color: $text-disabled;
      cursor: not-allowed;
      transform: none;
      box-shadow: none;
    }
  } @else if $variant == 'secondary' {
    background-color: transparent;
    color: $primary-color;
    border: 2px solid $primary-color;
    
    &:hover:not(:disabled) {
      background-color: $primary-color;
      color: $white;
      transform: translateY(-2px);
    }
    
    &:disabled {
      border-color: $primary-disabled;
      color: $text-disabled;
      cursor: not-allowed;
      transform: none;
    }
  } @else if $variant == 'ghost' {
    background-color: transparent;
    color: $text-primary;
    
    &:hover:not(:disabled) {
      background-color: $gray-light;
      color: $primary-color;
    }
    
    &:disabled {
      color: $text-disabled;
      cursor: not-allowed;
    }
  }
}

// Layout Mixins
@mixin container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 $spacing-md;
  
  @media (min-width: $breakpoint-md) {
    padding: 0 $spacing-lg;
  }
}

@mixin section-padding {
  padding: $spacing-3xl 0;
  
  @media (min-width: $breakpoint-md) {
    padding: $spacing-3xl * 1.5 0;
  }
}

// Responsive Mixins
@mixin mobile {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: $breakpoint-sm) and (max-width: #{$breakpoint-lg - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

// Animation Mixins
@mixin fade-in($duration: $transition-normal) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-up($duration: $transition-normal) {
  animation: slideUp $duration ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Utility Mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin grid-center {
  display: grid;
  place-items: center;
}

@mixin hover-lift {
  transition: transform $transition-normal;
  
  &:hover {
    transform: translateY(-4px);
  }
} 